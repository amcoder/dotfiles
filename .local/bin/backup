#!/bin/sh -x

# 24 hourly
# 30 daily
# 52 weeks
# 5 years

#-- begin of user configuration
backup_server=beedle-back
backup_user=backup
user=$(whoami)
sourcedir=/home/$user/
targetdir=/volume1/backup/$(hostname)/$user
#-- end of user configuration

interval=$1
num=$2

timestamp=`date "+%Y-%m-%dT%H-%M-%S"`

tempfile=$targetdir/$interval-tmp-$timestamp

# Create new backup using rsync and output to log
rsync -avzPh --delete --delete-excluded -e ssh \
  --exclude-from=/home/$user/.config/backup_exclude \
  --link-dest=$targetdir/latest \
  $sourcedir \
  $backup_user@$backup_server:$tempfile

code=$?
if [ "$code" != 0 ]; then
  printf "rsync failed with code $code\n"
  exit $code
fi

# check exit status to see if backup failed
if [ "$?" = 0 ]; then
  # Rotate backups
  ssh $backup_user@$backup_server "[ -d $targetdir/$interval.$(($num-1)) ] && rm -rf $targetdir/$interval.$(($num-1))"
  for i in `seq $(($num-1)) -1 1`
  do
    ssh $backup_user@$backup_server "[ -d $targetdir/$interval.$(($i-1)) ] && mv $targetdir/$interval.$(($i-1)) $targetdir/$interval.$i"
  done

  # Rename directory if succeeded
  ssh $backup_user@$backup_server "mv $tempfile $targetdir/$interval.0"
  ssh $backup_user@$backup_server "touch $targetdir/$interval.0"

  # Remove link to latest backup
  ssh $backup_user@$backup_server "rm -f $targetdir/latest"

  # Create link to the newest backup
  ssh $backup_user@$backup_server "ln -s $targetdir/$interval.0 $targetdir/latest"
else
  # Rename directory if failed
  printf "rsync failed\n"
  ssh $backup_user@$backup_server "mv $tempfile $targetdir/$interval-failed-$timestamp"
  exit 1
fi
