#!/usr/bin/env zsh

LAPTOP="\uf109"
CHARGING="\uf1e6"

FULL="\uf240"
THREE_QUARTERS="\uf241"
HALF="\uf242"
ONE_QUARTER="\uf243"
EMPTY="\uf244"

LAPTOP_VISIBLE_CHARGE=80
BLUETOOTH_VISIBLE_CHARGE=50

output=()

if [[ $BLOCK_BUTTON == 1 ]]; then
    if [[ $_expanded == "false" ]]; then
        _expanded="true"
    else
        _expanded="false"
    fi
fi

charge_icon() {
    if [[ $1 -ge 90 ]]; then
        echo $FULL
    elif [[ $1 -ge 65 ]]; then
        echo $THREE_QUARTERS
    elif [[ $1 -ge 40 ]]; then
        echo $HALF
    elif [[ $1 -ge 15 ]]; then
        echo "<span color=\"#EBCB8B\">$ONE_QUARTER</span>"
    else
        echo "<span color=\"#BF616A\">$EMPTY</span>"
    fi
}

type_icon() {
    case $1 in
        input-mouse)
            echo "\uf8cc"
            ;;
        input-keyboard)
            echo "\uf11c"
            ;;
        audio-headset)
            echo "\uf590"
            ;;
        phone)
            echo "\uf3cd"
            ;;
        *)
            echo "\u003f"
            ;;
    esac
}

#
# Laptop batteries
IFS='|'
while read -r name st charge remaining; do
    [[ $charge -gt $LAPTOP_VISIBLE_CHARGE ]] && continue

    battery="$LAPTOP"
    if [[ $st != "Discharging" ]]; then
        battery="$battery $CHARGING"
    fi

    battery=("$battery $(charge_icon $charge)")
    if [[ $_expanded == "true" ]]; then
        t=""
        if [[ $st == "Discharging" ]]; then
            t="($remaining remaining)"
        elif [[ $st == "Charging" ]]; then
            t="($remaining to full)"
        fi
        battery="$battery <span rise=\\\"1pt\\\" size=\\\"smaller\\\">$charge% $t</span>"
    fi
    output+=("$battery")
done <<< $(acpi -b | sed -r 's/^(.+): (.+), ([0-9]+)\%(, )?([0-9]+:[0-9]+)?.*/\1|\2|\3|\5/')
unset IFS

#
# Bluetooth devices
while read -r t id name; do
    info=$(bluetoothctl info $id)

    [[ $info =~ (Battery Percentage: .* [(](.*)[)]) ]]
    charge=${match[2]}
    [[ -z $charge || $charge -gt $BLUETOOTH_VISIBLE_CHARGE ]] && continue

    [[ $info =~ (Icon: ([^[:space:]]+)) ]]
    battery=$(type_icon ${match[2]})

    battery="$battery $(charge_icon $charge)"
    if [[ $_expanded == "true" ]]; then
        battery="$battery <span rise=\\\"1pt\\\" size=\\\"smaller\\\">$charge%</span>"
    fi
    output+=("$battery")
done <<< $(bluetoothctl devices Connected)

# Join the output array with spaces
output="${(j:   :)output}"
echo "{ \"full_text\": \"$output\", \"_expanded\": \"$_expanded\" }"
