#!/usr/bin/env python3
"""
A do-not-disturb button for muting Dunst notifications in i3 using i3blocks

Mute is handled using the `dunstctl` command.
"""

__author__ = "Jessey White-Cinis <j@cin.is>"
__copyright__ = "Copyright (c) 2019 Jessey White-Cinis"
__license__ = "MIT"
__version__ = "1.1.0"

import os
import subprocess as sp
import json

def mute_toggle():
    '''Toggle dunst notifications'''
    sp.run(["dunstctl", "set-paused", "toggle"], check=True)

def clicked():
    '''Returns True if the button was clicked'''
    button = os.environ.get("BLOCK_BUTTON", None)
    return bool(button == "1")

def right_clicked():
    '''Returns True if the button was right clicked'''
    button = os.environ.get("BLOCK_BUTTON", None)
    return bool(button == "3")

def muted():
    '''Returns True if Dunst is muted'''
    output = sp.check_output(('dunstctl', 'is-paused'))
    return u'true' ==  output.strip().decode("UTF-8")

def count_waiting():
    '''Returns the number of waiting notifications'''
    output = sp.check_output(('dunstctl', 'count', 'waiting'))
    return int(output.strip().decode("UTF-8"))

if clicked():
    # toggle button click to turn mute on and off
    mute_toggle()

if right_clicked():
    # right click to show the notification history
    sp.run(["dunstctl", "history-pop"], check=True)

if muted():
    count = count_waiting();
    print("<span font='FontAwesome'>\uf1f6%s</span>" % (count if count > 0 else ""))
else:
    print("<span font='FontAwesome'>\uf0f3</span>")

